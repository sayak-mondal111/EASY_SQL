SELECT [field] FROM [table];
SELECT [field], [field] FROM [table];
SELECT [field], [field] FROM [table] WHERE [field] = [value];
SELECT [field], [field] FROM [table] WHERE [field] <> [value];
SELECT [field], [field] FROM [table] WHERE [field] < [value];
SELECT [field], [field] FROM [table] WHERE [field] > [value];
SELECT [field], [field] FROM [table] WHERE [field] <= [value];
SELECT [field], [field] FROM [table] WHERE [field] >= [value];
SELECT [field], [field] FROM [table] WHERE [field] BETWEEN [value] AND [value];
SELECT [field], [field] FROM [table] WHERE [field] IN ([value], [value]);
SELECT [field], [field] FROM [table] WHERE [field] LIKE '[pattern]';
SELECT [field], [field] FROM [table] WHERE [field] IS NULL;
SELECT [field], [field] FROM [table] WHERE [field] IS NOT NULL;
SELECT [field], [field] FROM [table] ORDER BY [field] ASC;
SELECT [field], [field] FROM [table] ORDER BY [field] DESC;
SELECT [field], [field] FROM [table] LIMIT [number];
SELECT [field], [field] FROM [table] OFFSET [number];
SELECT COUNT([field]) FROM [table];
SELECT SUM([field]) FROM [table];
SELECT AVG([field]) FROM [table];
SELECT MIN([field]) FROM [table];
SELECT MAX([field]) FROM [table];
SELECT [field], COUNT([field]) FROM [table] GROUP BY [field];
SELECT [field], COUNT([field]) FROM [table] GROUP BY [field] HAVING COUNT([field]) > [value];
SELECT [table].[field], [table].[field] FROM [table] INNER JOIN [table] ON [table].[id] = [table].[id];
SELECT [table].[field], [table].[field] FROM [table] LEFT JOIN [table] ON [table].[id] = [table].[id];
SELECT [table].[field], [table].[field] FROM [table] RIGHT JOIN [table] ON [table].[id] = [table].[id];
SELECT [table].[field], [table].[field] FROM [table] FULL OUTER JOIN [table] ON [table].[id] = [table].[id];
SELECT [field] FROM [table] UNION SELECT [field] FROM [table];
SELECT [field] FROM [table] UNION ALL SELECT [field] FROM [table];
SELECT [field] FROM [table] INTERSECT SELECT [field] FROM [table];
SELECT [field] FROM [table] EXCEPT SELECT [field] FROM [table];
SELECT [field], [field], CASE WHEN [condition] THEN [result] ELSE [result] END FROM [table];
SELECT * FROM [table] CROSS JOIN [table];
SELECT * FROM [table] SELF JOIN [table] [alias] ON [table].[id] = [alias].[id];
SELECT [field], ROW_NUMBER() OVER (PARTITION BY [field] ORDER BY [field]) FROM [table];
SELECT [field], RANK() OVER (ORDER BY [field]) FROM [table];
SELECT COALESCE([field], [default_value]) FROM [table];
SELECT NULLIF([field], [value]) FROM [table];
SELECT CONCAT([field], [field]) FROM [table];
SELECT [field] ->> '$.key' FROM [table];
SELECT * FROM [table];
SELECT [field] AS [alias] FROM [table];
SELECT COUNT(DISTINCT [field]) FROM [table];
SELECT STDDEV([field]) FROM [table];
SELECT VARIANCE([field]) FROM [table];
SELECT GROUP_CONCAT([field]) FROM [table];
SELECT SUM([field] + [field]) FROM [table];
SELECT AVG([field] * [field]) FROM [table];
SELECT SQRT([field]) FROM [table];
SELECT POWER([field], [exponent]) FROM [table];
SELECT ABS([field]) FROM [table];
SELECT ROUND([field], [decimal]) FROM [table];
SELECT CEIL([field]) FROM [table];
SELECT FLOOR([field]) FROM [table];
SELECT LOG([field]) FROM [table];
SELECT MOD([field], [divisor]) FROM [table];
SELECT [field], SUM([field]) FROM [table] GROUP BY [field];
SELECT [field], AVG([field]) FROM [table] GROUP BY [field] HAVING AVG([field]) > [value];
SELECT [field], COUNT(*) FROM [table] GROUP BY [field] HAVING COUNT(*) > [value];
SELECT * FROM [table] WHERE [field] = [value];
SELECT * FROM [table] WHERE [field] BETWEEN [value] AND [value];
SELECT * FROM [table] WHERE [field] IN ([value], [value]);
SELECT * FROM [table] WHERE [field] LIKE '[pattern]';
SELECT * FROM [table] WHERE [field] IS NULL;
SELECT * FROM [table] INNER JOIN [table] ON [table].[id] = [table].[id];
SELECT * FROM [table] LEFT JOIN [table] ON [table].[id] = [table].[id];
SELECT * FROM [table] RIGHT JOIN [table] ON [table].[id] = [table].[id];
SELECT * FROM [table] FULL OUTER JOIN [table] ON [table].[id] = [table].[id];
SELECT * FROM [table] NATURAL JOIN [table];
SELECT [field], ROW_NUMBER() OVER (ORDER BY [field]) FROM [table];
SELECT [field], RANK() OVER (PARTITION BY [field] ORDER BY [field]) FROM [table];
SELECT [field], SUM([field]) OVER (PARTITION BY [field]) FROM [table];
SELECT [field], LAG([field], 1) OVER (ORDER BY [field]) FROM [table];
SELECT [field], LEAD([field], 1) OVER (ORDER BY [field]) FROM [table];
SELECT EXTRACT(YEAR FROM [date_field]) FROM [table];
SELECT DATE_ADD([date_field], INTERVAL [number] DAY) FROM [table];
SELECT DATEDIFF([date1], [date2]) FROM [table];
SELECT SUBSTRING([field], [start], [length]) FROM [table];
SELECT UPPER([field]) FROM [table];
SELECT LOWER([field]) FROM [table];
SELECT TRIM([field]) FROM [table];
SELECT LENGTH([field]) FROM [table];
SELECT CASE WHEN [field] > [value] THEN 'High' ELSE 'Low' END FROM [table];
SELECT SUM(CASE WHEN [field] > [value] THEN 1 ELSE 0 END) FROM [table];
SELECT COALESCE([field], [default]) FROM [table];
SELECT CAST([field] AS DATE) FROM [table];
SELECT [json_field] ->> '$.key' FROM [table];
SELECT XMLQUERY('//node' PASSING [xml_field]) FROM [table];
SELECT * FROM [table] LIMIT [number] OFFSET [number];
SELECT * FROM [table] WHERE MATCH([field]) AGAINST ('[term]');
SELECT * FROM [table] START WITH [field] = [value] CONNECT BY PRIOR [id] = [parent_id];
SELECT * FROM [table] PARTITION ([partition_name]);
SELECT [field], [field], [field] FROM [table];
SELECT [field] FROM [table] WHERE [field] = [value];
SELECT [field], [field] FROM [table] WHERE [field] = [value];
SELECT [field], [field] FROM [table] WHERE [field] > [value];
SELECT [field], [field] FROM [table] WHERE [field] < [value];
SELECT [field], [field] FROM [table] WHERE [field] BETWEEN [value] AND [value];
SELECT [field], [field] FROM [table] WHERE [field] IN ([value], [value], [value]);
SELECT [field], [field] FROM [table] WHERE [field] LIKE [%value%];
SELECT [field], [field] FROM [table] WHERE NOT [field] = [value];
SELECT [field], [field] FROM [table] WHERE [field] = [value] AND [field] = [value];
SELECT [field], [field] FROM [table] WHERE [field] = [value] OR [field] = [value];
SELECT [field], [field] FROM [table] WHERE [field] = [value] AND [field] > [value];
SELECT [field], [field] FROM [table] WHERE [field] = [value] AND [field] < [value];
SELECT [field], [field] FROM [table] WHERE [field] = [value] AND [field] BETWEEN [value] AND [value];
SELECT [field], [field] FROM [table] WHERE [field] = [value] AND [field] IN ([value], [value], [value]);
SELECT [field], [field] FROM [table] WHERE [field] = [value] AND [field] LIKE [%value%];
SELECT [field], [field] FROM [table] WHERE [field] = [value] AND [field] IS NULL;
SELECT [field], [field] FROM [table] WHERE [field] = [value] AND [field] IS NOT NULL;
SELECT [field], [field] FROM [table] WHERE [field] = [value] AND [field] <> [value];
SELECT [field], [field] FROM [table] WHERE [field] = [value] AND [field] > [value] AND [field] < [value];
SELECT [field], [field] FROM [table] WHERE [field] = [value] OR [field] = [value] OR [field] = [value];
SELECT [field], [field] FROM [table] WHERE [field] = [value] AND [field] = [value] AND [field] = [value];
SELECT [field], [field] FROM [table] WHERE [field] = [value] AND [field] = [value] AND [field] <> [value];
SELECT [field], [field] FROM [table] WHERE [field] = [value] AND [field] = [value] AND [field] BETWEEN [value] AND [value];
SELECT [field], [field] FROM [table] WHERE [field] = [value] AND [field] = [value] AND [field] IN ([value], [value], [value]);
SELECT [field], [field] FROM [table] WHERE [field] = [value] AND [field] = [value] AND [field] LIKE [%value%];
SELECT [field], [field] FROM [table] WHERE [field] = [value] AND [field] = [value] AND [field] IS NULL;
SELECT [field], [field] FROM [table] WHERE [field] = [value] AND [field] = [value] AND [field] IS NOT NULL;
SELECT [field], [field] FROM [table] WHERE [field] = [value] ORDER BY [field] ASC;
SELECT [field], [field] FROM [table] WHERE [field] = [value] ORDER BY [field] DESC;
SELECT [field], [field] FROM [table] LIMIT [10];
SELECT [field], [field] FROM [table] WHERE [field] = [value] LIMIT [10];
SELECT [field], [field] FROM [table] ORDER BY [field] DESC LIMIT [5];
SELECT [field], [field] FROM [table] WHERE [field] = [value] ORDER BY [field] DESC LIMIT [5];
SELECT [field], [field] FROM [table] GROUP BY [field];
SELECT [field], COUNT(*) FROM [table] GROUP BY [field];
SELECT [field], AVG([field]) FROM [table] GROUP BY [field];
SELECT [field], MAX([field]) FROM [table] GROUP BY [field];
SELECT [field], MIN([field]) FROM [table] GROUP BY [field];
SELECT [field], [field] FROM [table] WHERE [field] = [value] GROUP BY [field], [field];
SELECT [field], COUNT(*) FROM [table] WHERE [field] = [value] GROUP BY [field];
SELECT [field], SUM([field]) FROM [table] WHERE [field] = [value] GROUP BY [field];
SELECT [field], AVG([field]) FROM [table] WHERE [field] = [value] GROUP BY [field];
SELECT [field], MAX([field]) FROM [table] WHERE [field] = [value] GROUP BY [field];
SELECT [field], MIN([field]) FROM [table] WHERE [field] = [value] GROUP BY [field];
SELECT [field], [field] FROM [table] HAVING COUNT(*) > [1];
SELECT [field], [field] FROM [table] GROUP BY [field], [field] HAVING COUNT(*) > [1];
SELECT [field], [field] FROM [table] WHERE [field] = [value] HAVING COUNT(*) > [1];
SELECT [field], [field] FROM [table] GROUP BY [field], [field] HAVING SUM([field]) > [100];
SELECT [field], [field] FROM [table] GROUP BY [field], [field] HAVING AVG([field]) > [50];
SELECT [field], [field] FROM [table] GROUP BY [field], [field] HAVING MAX([field]) > [200];
SELECT [field], [field] FROM [table] GROUP BY [field], [field] HAVING MIN([field]) < [10];
SELECT [field], [field] FROM [table] JOIN [table] ON [table].[field] = [table].[field];
SELECT [field], [field] FROM [table] INNER JOIN [table] ON [table].[field] = [table].[field];
SELECT [field], [field] FROM [table] LEFT JOIN [table] ON [table].[field] = [table].[field];
SELECT [field], [field] FROM [table] RIGHT JOIN [table] ON [table].[field] = [table].[field];
SELECT [field], [field] FROM [table] FULL OUTER JOIN [table] ON [table].[field] = [table].[field];
SELECT [field], [field] FROM [table] CROSS JOIN [table];
SELECT [field], [field] FROM [table] WHERE [field] = [value] UNION SELECT [field], [field] FROM [table] WHERE [field] = [value];
SELECT [field], [field] FROM [table] WHERE [field] = [value] UNION ALL SELECT [field], [field] FROM [table] WHERE [field] = [value];
SELECT [field], [field] FROM [table] WHERE [field] = [value] INTERSECT SELECT [field], [field] FROM [table] WHERE [field] = [value];
SELECT [field], [field] FROM [table] WHERE [field] = [value] EXCEPT SELECT [field], [field] FROM [table] WHERE [field] = [value];

SELECT [field] FROM [table] LEFT JOIN [table] ON [table].[id] = [table].[id] WHERE [field] IS NULL;
SELECT [field] FROM [table] GROUP BY [field] HAVING SUM([field]) < [value];
SELECT [field], AVG([field]) FROM [table] WHERE [field] LIKE '[pattern]' GROUP BY [field];
SELECT [field] FROM [table] ORDER BY [field] DESC LIMIT [number];
SELECT [field] FROM [table] JOIN [table] ON [table].[id] = [table].[id] WHERE [field] > [value];
SELECT [field], MAX([field]) FROM [table] WHERE [field] BETWEEN [value] AND [value] GROUP BY [field];
SELECT DISTINCT [field] FROM [table] CROSS JOIN [table] WHERE [table].[id] = [table].[id];
SELECT [field], [field] FROM [table] WHERE [fieldC] = [value];
SELECT [field] FROM [table] FULL OUTER JOIN [table] ON [table].[id] = [table].[id] WHERE [field] IS NOT NULL;
SELECT [field], COALESCE([field], [default]) FROM [table] WHERE [field] < [value];
SELECT [field], [field] FROM [table] WHERE [field] = [value];
SELECT [field], [field] FROM [table] WHERE [field] IN ([value], [value], [value]);
SELECT [field], [field] FROM [table] WHERE [field] LIKE [%value%];
SELECT [field], [field] FROM [table] WHERE [field] IS NULL;
SELECT [field], [field] FROM [table] WHERE [field] IS NOT NULL;
SELECT [field], [field] FROM [table] WHERE [field] BETWEEN [value] AND [value];
SELECT [field], [field] FROM [table] WHERE [field] > [value];
SELECT [field], [field] FROM [table] WHERE [field] < [value];
SELECT [field], [field] FROM [table] WHERE [field] = [value] AND [field] = [value];
SELECT [field], [field] FROM [table] WHERE [field] = [value] OR [field] = [value];
SELECT [field], [field] FROM [table] WHERE [field] = [value] AND [field] > [value];
SELECT [field], [field] FROM [table] WHERE [field] = [value] AND [field] < [value];
SELECT [field], [field] FROM [table] WHERE [field] = [value] AND [field] BETWEEN [value] AND [value];
SELECT [field], [field] FROM [table] WHERE [field] = [value] AND [field] IN ([value], [value], [value]);
SELECT [field], [field] FROM [table] WHERE [field] = [value] AND [field] LIKE [%value%];
SELECT [field], [field] FROM [table] WHERE [field] = [value] AND [field] IS NULL;
SELECT [field], [field] FROM [table] WHERE [field] = [value] AND [field] IS NOT NULL;
SELECT [field], [field] FROM [table] WHERE [field] = [value] AND [field] <> [value];
SELECT [field], [field] FROM [table] WHERE [field] = [value] AND [field] > [value] AND [field] < [value];
SELECT [field], [field] FROM [table] WHERE [field] = [value] OR [field] = [value] OR [field] = [value];
SELECT [field], [field] FROM [table] WHERE [field] = [value] AND [field] = [value] AND [field] = [value];
SELECT [field], [field] FROM [table] WHERE [field] = [value] AND [field] = [value] AND [field] <> [value];
SELECT [field], [field] FROM [table] WHERE [field] = [value] AND [field] = [value] AND [field] BETWEEN [value] AND [value];
SELECT [field], [field] FROM [table] WHERE [field] = [value] AND [field] = [value] AND [field] IN ([value], [value], [value]);
SELECT [field], [field] FROM [table] WHERE [field] = [value] AND [field] = [value] AND [field] LIKE [%value%];
SELECT [field], [field] FROM [table] WHERE [field] = [value] AND [field] = [value] AND [field] IS NULL;
SELECT [field], [field] FROM [table] WHERE [field] = [value] AND [field] = [value] AND [field] IS NOT NULL;


SELECT DISTINCT [field] FROM [table];
SELECT DISTINCT [field] FROM [table] where [field] = [value];
SELECT DISTINCT [field] FROM [table] where [field] > [value];
SELECT DISTINCT [field] FROM [table] where [field] < [value];
SELECT DISTINCT [field] FROM [table] where [field] <> [value];
SELECT TOP [int_value] * FROM [table];
SELECT [field], [field] FROM [table] LIMIT [int_value];
SELECT * FROM [table] ORDER BY [field] DESC LIMIT [int_value];
SELECT * FROM [table] ORDER BY [field] ASC LIMIT [int_value];
SELECT [field] AS [alias], [field] FROM [table];


INSERT INTO [table] ([field], [field]) VALUES ([value], [value]);
INSERT INTO [table] VALUES ([value], [value]);
INSERT INTO [table] ([field], [field], [field]) VALUES ([value], [value], [value]);
INSERT INTO [table] ([field], [field], [field], [field]) VALUES ([value], [value], [value], [value]);
INSERT INTO [table] ([field], [field]) VALUES ([value], [value]), ([value], [value]);
INSERT INTO [table] ([field], [field], [field]) VALUES ([value], [value], [value]), ([value], [value], [value]);
INSERT INTO [table] ([field], [field], [field], [field]) VALUES ([value], [value], [value], [value]), ([value], [value], [value], [value]);
INSERT INTO [table] ([field], [field]) VALUES ([value], DEFAULT);
INSERT INTO [table] ([field], [field]) VALUES (DEFAULT, [value]);
INSERT INTO [table] ([field], [field]) VALUES ([value], NULL);
INSERT INTO [table] ([field], [field]) VALUES (NULL, [value]);
INSERT INTO [table] ([field], [field]) VALUES ([value], [value]) ON DUPLICATE KEY UPDATE [field] = [value], [field] = [value];
INSERT INTO [table] ([field], [field]) VALUES ([value], [value]) ON DUPLICATE KEY UPDATE [field] = VALUES([field]), [field] = VALUES([field]);
INSERT INTO [table] ([field], [field]) VALUES ([value], [value]) ON CONFLICT ([field]) DO UPDATE SET [field] = [value];
INSERT INTO [table] ([field], [field]) VALUES ([value], [value]) ON CONFLICT ([field]) DO NOTHING;
INSERT INTO [table] ([field], [field]) VALUES ([value], [value]) RETURNING [field], [field];
INSERT INTO [table] ([field], [field]) VALUES ([value], [value]) RETURNING *;
INSERT INTO [table] ([field], [field]) SELECT [field], [field] FROM [table] WHERE [field] = [value] RETURNING [field], [field];
INSERT INTO [table] ([field], [field]) SELECT [field], [field] FROM [table] WHERE [field] = [value] RETURNING *;





UPDATE [table] SET [json_field] = JSON_SET([json_field], '$.key', [value]);
UPDATE [table] SET [field] = [value] WHERE [condition];
UPDATE [table], [table] SET [table].[field] = [table].[field] WHERE [table].[id] = [table].[id];
UPDATE [table] SET [field] = [value];
UPDATE [table] SET [field] = [value], [field] = [value];
UPDATE [table] SET [field] = [value], [field] = [value] WHERE [field] = [value];
UPDATE [table] SET [field] = [value], [field] = [value] WHERE [field] > [value];
UPDATE [table] SET [field] = [value], [field] = [value] WHERE [field] BETWEEN [value] AND [value];
UPDATE [table] SET [field] = [value], [field] = [value] WHERE [field] IN ([value], [value], [value]);
UPDATE [table] SET [field] = [value], [field] = [value] WHERE [field] LIKE [%value%];
UPDATE [table] SET [field] = [value], [field] = [value] WHERE [field] IS NULL;
UPDATE [table] SET [field] = [value], [field] = [value] WHERE NOT [field] = [value];
UPDATE [table] SET [field] = [value], [field] = [value] WHERE [field] = [value] AND [field] = [value];
UPDATE [table] SET [field] = [value], [field] = [value] WHERE [field] = [value] OR [field] = [value];
UPDATE [table] SET [field] = [value], [field] = [value] WHERE [field] = [value] LIMIT [10];
UPDATE [table] SET [field] = [value], [field] = [value] WHERE [field] = [value] ORDER BY [field] DESC LIMIT [5];
UPDATE [table] SET [field] = [value], [field] = [value] WHERE [field] = [value] AND [field] BETWEEN [value] AND [value];
UPDATE [table] SET [field] = [value], [field] = [value] WHERE [field] = [value] AND [field] IN ([value], [value], [value]);
UPDATE [table] SET [field] = [value], [field] = [value] WHERE [field] = [value] AND [field] LIKE [%value%];
UPDATE [table] SET [field] = [value], [field] = [value] WHERE [field] = [value] AND [field] IS NULL;
UPDATE [table] SET [field] = [value], [field] = [value] WHERE [field] = [value] AND [field] IS NOT NULL;
UPDATE [table] SET [field] = [value], [field] = [value] WHERE [field] = [value] AND [field] <> [value];
UPDATE [table] SET [field] = [value], [field] = [value] WHERE [field] = [value] AND [field] > [value] AND [field] < [value];
UPDATE [table] SET [field] = [value], [field] = [value] WHERE [field] = [value] OR [field] = [value] OR [field] = [value];
UPDATE [table] SET [field] = [value], [field] = [value] WHERE [field] = [value] AND [field] = [value] AND [field] = [value];
UPDATE [table] SET [field] = [value], [field] = [value] WHERE [field] = [value] AND [field] = [value] AND [field] <> [value];
UPDATE [table] SET [field] = [value], [field] = [value] WHERE [field] = [value] AND [field] = [value] AND [field] BETWEEN [value] AND [value];
UPDATE [table] SET [field] = [value], [field] = [value] WHERE [field] = [value] AND [field] = [value] AND [field] IN ([value], [value], [value]);
UPDATE [table] SET [field] = [value], [field] = [value] WHERE [field] = [value] AND [field] = [value] AND [field] LIKE [%value%];
UPDATE [table] SET [field] = [value], [field] = [value] WHERE [field] = [value] AND [field] = [value] AND [field] IS NULL;
UPDATE [table] SET [field] = [value], [field] = [value] WHERE [field] = [value] AND [field] = [value] AND [field] IS NOT NULL;
UPDATE [table] SET [field] = [value], [field] = [value] WHERE [field] = [value] AND [field] = [value] AND [field] > [value] AND [field] < [value];
UPDATE [table] SET [field] = [value], [field] = [value] WHERE [field] = [value] AND [field] = [value] OR [field] = [value];
UPDATE [table] SET [field] = [value], [field] = [value] WHERE [field] = [value] AND [field] = [value] OR [field] = [value] OR [field] = [value];
UPDATE [table] SET [field] = [value], [field] = [value] WHERE [field] = [value] AND [field] = [value] AND [field] = [value] OR [field] = [value];
UPDATE [table] SET [field] = [value], [field] = [value] WHERE [field] = [value] AND [field] = [value] AND [field] = [value] AND [field] = [value];
UPDATE [table] SET [field] = [value], [field] = [value] WHERE [field] = [value] AND [field] = [value] AND [field] = [value] AND [field] <> [value];
UPDATE [table] SET [field] = [value], [field] = [value] WHERE [field] = [value] AND [field] = [value] AND [field] = [value] AND [field] BETWEEN [value] AND [value];
UPDATE [table] SET [field] = [value], [field] = [value] WHERE [field] = [value] AND [field] = [value] AND [field] = [value] AND [field] IN ([value], [value], [value]);
UPDATE [table] SET [field] = [value], [field] = [value] WHERE [field] = [value] AND [field] = [value] AND [field] = [value] AND [field] LIKE [%value%];
UPDATE [table] SET [field] = [value], [field] = [value] WHERE [field] = [value] AND [field] = [value] AND [field] = [value] AND [field] IS NULL;
UPDATE [table] SET [field] = [value], [field] = [value] WHERE [field] = [value] AND [field] = [value] AND [field] = [value] AND [field] IS NOT NULL;





DELETE FROM [table] WHERE [condition];
DELETE FROM [table];
DELETE FROM [table], [table] USING [table] JOIN [table] ON [condition] WHERE [criteria];
DELETE FROM [table] WHERE [field] = [value];
DELETE FROM [table] WHERE [field] = [value] AND [field] = [value];
DELETE FROM [table] WHERE [field] = [value] OR [field] = [value];
DELETE FROM [table] WHERE [field] > [value];
DELETE FROM [table] WHERE [field] < [value];
DELETE FROM [table] WHERE [field] BETWEEN [value] AND [value];
DELETE FROM [table] WHERE [field] IN ([value], [value], [value]);
DELETE FROM [table] WHERE [field] LIKE [%value%];
DELETE FROM [table] WHERE [field] IS NULL;
DELETE FROM [table] WHERE [field] IS NOT NULL;
DELETE FROM [table] WHERE NOT [field] = [value];
DELETE FROM [table] WHERE [field] = [value] AND [field] > [value];
DELETE FROM [table] WHERE [field] = [value] AND [field] < [value];
DELETE FROM [table] WHERE [field] = [value] AND [field] BETWEEN [value] AND [value];
DELETE FROM [table] WHERE [field] = [value] AND [field] IN ([value], [value], [value]);
DELETE FROM [table] WHERE [field] = [value] AND [field] LIKE [%value%];
DELETE FROM [table] WHERE [field] = [value] AND [field] IS NULL;
DELETE FROM [table] WHERE [field] = [value] AND [field] IS NOT NULL;
DELETE FROM [table] WHERE [field] = [value] OR [field] = [value] OR [field] = [value];
DELETE FROM [table] WHERE [field] = [value] AND [field] = [value] AND [field] = [value];
DELETE FROM [table] WHERE [field] = [value] AND [field] = [value] AND [field] <> [value];
DELETE FROM [table] WHERE [field] = [value] AND [field] = [value] AND [field] BETWEEN [value] AND [value];
DELETE FROM [table] WHERE [field] = [value] AND [field] = [value] AND [field] IN ([value], [value], [value]);
DELETE FROM [table] WHERE [field] = [value] AND [field] = [value] AND [field] LIKE [%value%];
DELETE FROM [table] WHERE [field] = [value] AND [field] = [value] AND [field] IS NULL;
DELETE FROM [table] WHERE [field] = [value] AND [field] = [value] AND [field] IS NOT NULL;
DELETE FROM [table] WHERE [field] = [value] AND [field] = [value] AND [field] > [value] AND [field] < [value];
DELETE FROM [table] WHERE [field] = [value] AND [field] = [value] OR [field] = [value];
DELETE FROM [table] WHERE [field] = [value] AND [field] = [value] OR [field] = [value] OR [field] = [value];
DELETE FROM [table] WHERE [field] = [value] AND [field] = [value] AND [field] = [value] OR [field] = [value];
DELETE FROM [table] WHERE [field] = [value] AND [field] = [value] AND [field] = [value] AND [field] = [value];
DELETE FROM [table] WHERE [field] = [value] AND [field] = [value] AND [field] = [value] AND [field] <> [value];
DELETE FROM [table] WHERE [field] = [value] AND [field] = [value] AND [field] = [value] AND [field] BETWEEN [value] AND [value];
DELETE FROM [table] WHERE [field] = [value] AND [field] = [value] AND [field] = [value] AND [field] IN ([value], [value], [value]);
DELETE FROM [table] WHERE [field] = [value] AND [field] = [value] AND [field] = [value] AND [field] LIKE [%value%];
DELETE FROM [table] WHERE [field] = [value] AND [field] = [value] AND [field] = [value] AND [field] IS NULL;
DELETE FROM [table] WHERE [field] = [value] AND [field] = [value] AND [field] = [value] AND [field] IS NOT NULL;
DELETE FROM [table] WHERE [field] = [value] LIMIT [10];
DELETE FROM [table] WHERE [field] = [value] ORDER BY [field] DESC LIMIT [5];
DELETE FROM [table] WHERE [field] = [value] AND [field] = [value] LIMIT [10];
DELETE FROM [table] WHERE [field] = [value] AND [field] = [value] ORDER BY [field] DESC LIMIT [5];
DELETE FROM [table] WHERE [field] = [value] AND [field] = [value] AND [field] = [value] AND [field] = [value] AND [field] = [value];
DELETE FROM [table] WHERE [field] = [value] AND [field] = [value] AND [field] = [value] AND [field] = [value] AND [field] <> [value];
DELETE FROM [table] WHERE [field] = [value] AND [field] = [value] AND [field] = [value] AND [field] = [value] AND [field] BETWEEN [value] AND [value];
DELETE FROM [table] WHERE [field] = [value] AND [field] = [value] AND [field] = [value] AND [field] = [value] AND [field] IN ([value], [value], [value]);
DELETE FROM [table] WHERE [field] = [value] AND [field] = [value] AND [field] = [value] AND [field] = [value] AND [field] LIKE [%value%];
DELETE FROM [table] WHERE [field] = [value] AND [field] = [value] AND [field] = [value] AND [field] = [value] AND [field] IS NULL;
DELETE FROM [table] WHERE [field] = [value] AND [field] = [value] AND [field] = [value] AND [field] = [value] AND [field] IS NOT NULL;




CREATE TABLE [table] ([field] [datatype], [field] [datatype]);
CREATE TABLE [table] AS SELECT [field], [field] FROM [existing_table];
CREATE INDEX [index_name] ON [table] ([field]);
CREATE VIEW [view_name] AS SELECT [field], [field] FROM [table];
CREATE TABLE [table] ([field] [datatype] UNIQUE);
CREATE TABLE [table] ([field] [datatype] CHECK ([field] > [value]));
CREATE TABLE [table] ([field] [datatype] DEFAULT [default_value]);
CREATE TABLE [table] ([field] INT, [field] VARCHAR(255));
CREATE DATABASE [database_name];
CREATE TABLE [table] ([field] INT UNIQUE);
CREATE TABLE [table] ([field] INT CHECK ([field] > [value]));
CREATE TABLE [table] ([field] INT DEFAULT [value]);




ALTER TABLE [table] ADD [column] [datatype];
ALTER TABLE [table] DROP COLUMN [column];
ALTER TABLE [table] MODIFY COLUMN [column] [new_datatype];
ALTER TABLE [table] ADD CONSTRAINT [constraint_name] PRIMARY KEY ([field]);
ALTER TABLE [table] ADD CONSTRAINT [constraint_name] FOREIGN KEY ([field]) REFERENCES [table]([field]);
ALTER TABLE [table] RENAME TO [new_table_name];
ALTER TABLE [table] RENAME COLUMN [old_name] TO [new_name];
ALTER TABLE [table] ADD COLUMN [field] [datatype];
ALTER TABLE [table] DROP COLUMN [field];
ALTER TABLE [table] MODIFY COLUMN [field] [new_datatype];
ALTER TABLE [table] ADD PRIMARY KEY ([field]);
ALTER TABLE [table] ADD FOREIGN KEY ([field]) REFERENCES [table]([field]);
ALTER TABLE [table] RENAME TO [new_name];



DROP TABLE [table];
DROP INDEX [index_name];
DROP VIEW [view_name];
TRUNCATE TABLE [table];
BEGIN TRANSACTION;
COMMIT;
ROLLBACK;
SAVEPOINT [savepoint_name];
ROLLBACK TO [savepoint_name];
GRANT SELECT ON [table] TO [user];
REVOKE DELETE ON [table] FROM [user];
GRANT SELECT, INSERT ON [table] TO [user];
WITH RECURSIVE [cte] AS (...) SELECT * FROM [cte];
EXECUTE IMMEDIATE 'SELECT * FROM [table]';
MERGE INTO [table] USING [table] ON [condition] WHEN MATCHED THEN UPDATE SET [field] = [value] WHEN NOT MATCHED THEN INSERT ([field]) VALUES ([value]);
exit;